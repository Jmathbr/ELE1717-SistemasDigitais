
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002de  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002de  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000088  00000000  00000000  0000030d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001de5  00000000  00000000  00000395  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000006eb  00000000  00000000  0000217a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000a03  00000000  00000000  00002865  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000114  00000000  00000000  00003268  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  0000337c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000003c4  00000000  00000000  00003584  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000078  00000000  00000000  00003948  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000286  00000286  000002da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000039c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.lcd_cmd 00000020  00000244  00000244  00000298  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.lcd_data 0000005c  00000168  00000168  000001bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.lcd_adress 0000005c  000001c4  000001c4  00000218  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.lcd_init 00000014  00000264  00000264  000002b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.lcd_off_cursor 0000000e  00000278  00000278  000002cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.lcd_default 00000062  00000106  00000106  0000015a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.lcd_calc 00000086  00000080  00000080  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.main    00000024  00000220  00000220  00000274  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
   8:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
   c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  10:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  14:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  18:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  1c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  20:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  24:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  28:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  2c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  30:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  34:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  38:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  3c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  40:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  44:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  48:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  4c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  50:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  54:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  58:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  5c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  60:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  64:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 10 01 	call	0x220	; 0x220 <main>
  78:	0c 94 3e 00 	jmp	0x7c	; 0x7c <_exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

00000286 <__bad_interrupt>:
 286:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.lcd_cmd:

00000244 <lcd_cmd>:
void delay_2(){
	for(int i = 0;i<1000;i++){}
}
void lcd_cmd(unsigned char cmd){
	
	PORTB &= 0xF0;								// Mask preservation 4 LSBs
 244:	95 b1       	in	r25, 0x05	; 5
 246:	90 7f       	andi	r25, 0xF0	; 240
 248:	95 b9       	out	0x05, r25	; 5
	PORTB |= cmd;								// Add data command
 24a:	95 b1       	in	r25, 0x05	; 5
 24c:	89 2b       	or	r24, r25
 24e:	85 b9       	out	0x05, r24	; 5
	
	PORTB &= ~(1<<PORTB5);						// Set RS = 0
 250:	85 b1       	in	r24, 0x05	; 5
 252:	8f 7d       	andi	r24, 0xDF	; 223
 254:	85 b9       	out	0x05, r24	; 5
	PORTB |= (1<<PORTB4);						// Set E = 1
 256:	85 b1       	in	r24, 0x05	; 5
 258:	80 61       	ori	r24, 0x10	; 16
 25a:	85 b9       	out	0x05, r24	; 5
	delay_1();				
	PORTB &= ~(1<<PORTB4);						// Set E = 0 
 25c:	85 b1       	in	r24, 0x05	; 5
 25e:	8f 7e       	andi	r24, 0xEF	; 239
 260:	85 b9       	out	0x05, r24	; 5
 262:	08 95       	ret

Disassembly of section .text.lcd_data:

00000168 <lcd_data>:
void delay_1(){
	for(int i = 0;i<200;i++){}
}
void delay_2(){
	for(int i = 0;i<1000;i++){}
}
 168:	95 b1       	in	r25, 0x05	; 5
 16a:	90 62       	ori	r25, 0x20	; 32
 16c:	95 b9       	out	0x05, r25	; 5
 16e:	20 e0       	ldi	r18, 0x00	; 0
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	21 c0       	rjmp	.+66     	; 0x1b6 <lcd_data+0x4e>
 174:	21 15       	cp	r18, r1
 176:	31 05       	cpc	r19, r1
 178:	81 f4       	brne	.+32     	; 0x19a <lcd_data+0x32>
 17a:	95 b1       	in	r25, 0x05	; 5
 17c:	90 7f       	andi	r25, 0xF0	; 240
 17e:	95 b9       	out	0x05, r25	; 5
 180:	95 b1       	in	r25, 0x05	; 5
 182:	48 2f       	mov	r20, r24
 184:	42 95       	swap	r20
 186:	4f 70       	andi	r20, 0x0F	; 15
 188:	94 2b       	or	r25, r20
 18a:	95 b9       	out	0x05, r25	; 5
 18c:	95 b1       	in	r25, 0x05	; 5
 18e:	90 61       	ori	r25, 0x10	; 16
 190:	95 b9       	out	0x05, r25	; 5
 192:	95 b1       	in	r25, 0x05	; 5
 194:	9f 7e       	andi	r25, 0xEF	; 239
 196:	95 b9       	out	0x05, r25	; 5
 198:	0c c0       	rjmp	.+24     	; 0x1b2 <lcd_data+0x4a>
 19a:	95 b1       	in	r25, 0x05	; 5
 19c:	90 7f       	andi	r25, 0xF0	; 240
 19e:	95 b9       	out	0x05, r25	; 5
 1a0:	95 b1       	in	r25, 0x05	; 5
 1a2:	98 2b       	or	r25, r24
 1a4:	95 b9       	out	0x05, r25	; 5
 1a6:	95 b1       	in	r25, 0x05	; 5
 1a8:	90 61       	ori	r25, 0x10	; 16
 1aa:	95 b9       	out	0x05, r25	; 5
 1ac:	95 b1       	in	r25, 0x05	; 5
 1ae:	9f 7e       	andi	r25, 0xEF	; 239
 1b0:	95 b9       	out	0x05, r25	; 5
 1b2:	2f 5f       	subi	r18, 0xFF	; 255
 1b4:	3f 4f       	sbci	r19, 0xFF	; 255
 1b6:	22 30       	cpi	r18, 0x02	; 2
 1b8:	31 05       	cpc	r19, r1
 1ba:	e4 f2       	brlt	.-72     	; 0x174 <lcd_data+0xc>
 1bc:	85 b1       	in	r24, 0x05	; 5
 1be:	8f 7d       	andi	r24, 0xDF	; 223
 1c0:	85 b9       	out	0x05, r24	; 5
 1c2:	08 95       	ret

Disassembly of section .text.lcd_adress:

000001c4 <lcd_adress>:
 1c4:	95 b1       	in	r25, 0x05	; 5
 1c6:	9f 7d       	andi	r25, 0xDF	; 223
 1c8:	95 b9       	out	0x05, r25	; 5
 1ca:	20 e0       	ldi	r18, 0x00	; 0
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	21 c0       	rjmp	.+66     	; 0x212 <lcd_adress+0x4e>
 1d0:	21 15       	cp	r18, r1
 1d2:	31 05       	cpc	r19, r1
 1d4:	81 f4       	brne	.+32     	; 0x1f6 <lcd_adress+0x32>
 1d6:	95 b1       	in	r25, 0x05	; 5
 1d8:	90 7f       	andi	r25, 0xF0	; 240
 1da:	95 b9       	out	0x05, r25	; 5
 1dc:	95 b1       	in	r25, 0x05	; 5
 1de:	48 2f       	mov	r20, r24
 1e0:	42 95       	swap	r20
 1e2:	4f 70       	andi	r20, 0x0F	; 15
 1e4:	94 2b       	or	r25, r20
 1e6:	95 b9       	out	0x05, r25	; 5
 1e8:	95 b1       	in	r25, 0x05	; 5
 1ea:	90 61       	ori	r25, 0x10	; 16
 1ec:	95 b9       	out	0x05, r25	; 5
 1ee:	95 b1       	in	r25, 0x05	; 5
 1f0:	9f 7e       	andi	r25, 0xEF	; 239
 1f2:	95 b9       	out	0x05, r25	; 5
 1f4:	0c c0       	rjmp	.+24     	; 0x20e <lcd_adress+0x4a>
 1f6:	95 b1       	in	r25, 0x05	; 5
 1f8:	90 7f       	andi	r25, 0xF0	; 240
 1fa:	95 b9       	out	0x05, r25	; 5
 1fc:	95 b1       	in	r25, 0x05	; 5
 1fe:	98 2b       	or	r25, r24
 200:	95 b9       	out	0x05, r25	; 5
 202:	95 b1       	in	r25, 0x05	; 5
 204:	90 61       	ori	r25, 0x10	; 16
 206:	95 b9       	out	0x05, r25	; 5
 208:	95 b1       	in	r25, 0x05	; 5
 20a:	9f 7e       	andi	r25, 0xEF	; 239
 20c:	95 b9       	out	0x05, r25	; 5
 20e:	2f 5f       	subi	r18, 0xFF	; 255
 210:	3f 4f       	sbci	r19, 0xFF	; 255
 212:	22 30       	cpi	r18, 0x02	; 2
 214:	31 05       	cpc	r19, r1
 216:	e4 f2       	brlt	.-72     	; 0x1d0 <lcd_adress+0xc>
 218:	85 b1       	in	r24, 0x05	; 5
 21a:	8f 7d       	andi	r24, 0xDF	; 223
 21c:	85 b9       	out	0x05, r24	; 5
 21e:	08 95       	ret

Disassembly of section .text.lcd_init:

00000264 <lcd_init>:
	}
	PORTB &= ~(1<<PORTB5);					// Set RS = 0 
}
void lcd_init(){
	
	lcd_cmd(0x02);							//RS = 0 D7:D4 = 0010
 264:	82 e0       	ldi	r24, 0x02	; 2
 266:	0e 94 22 01 	call	0x244	; 0x244 <lcd_cmd>
	lcd_cmd(0x02);							//RS = 0 D7:D4 = 0010
 26a:	82 e0       	ldi	r24, 0x02	; 2
 26c:	0e 94 22 01 	call	0x244	; 0x244 <lcd_cmd>
	lcd_cmd(0x08);							//RS = 0 D7:D4 = 1000
 270:	88 e0       	ldi	r24, 0x08	; 8
 272:	0e 94 22 01 	call	0x244	; 0x244 <lcd_cmd>
 276:	08 95       	ret

Disassembly of section .text.lcd_off_cursor:

00000278 <lcd_off_cursor>:
	
}

void lcd_off_cursor(){

	lcd_cmd(0x00);							//RS = 0 D7:D4 = 0000
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	0e 94 22 01 	call	0x244	; 0x244 <lcd_cmd>
	lcd_cmd(0x0C);							//RS = 0 D7:D4 = 1100
 27e:	8c e0       	ldi	r24, 0x0C	; 12
 280:	0e 94 22 01 	call	0x244	; 0x244 <lcd_cmd>
 284:	08 95       	ret

Disassembly of section .text.lcd_default:

00000106 <lcd_default>:
void delay_1(){
	for(int i = 0;i<200;i++){}
}
void delay_2(){
	for(int i = 0;i<1000;i++){}
}
 106:	80 e8       	ldi	r24, 0x80	; 128
 108:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
 10c:	8d e4       	ldi	r24, 0x4D	; 77
 10e:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
 112:	81 e8       	ldi	r24, 0x81	; 129
 114:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
 118:	8f e6       	ldi	r24, 0x6F	; 111
 11a:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
 11e:	82 e8       	ldi	r24, 0x82	; 130
 120:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
 124:	84 e6       	ldi	r24, 0x64	; 100
 126:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
 12a:	83 e8       	ldi	r24, 0x83	; 131
 12c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
 130:	8a e3       	ldi	r24, 0x3A	; 58
 132:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
 136:	80 ec       	ldi	r24, 0xC0	; 192
 138:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
 13c:	8d e4       	ldi	r24, 0x4D	; 77
 13e:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
 142:	81 ec       	ldi	r24, 0xC1	; 193
 144:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
 148:	83 e7       	ldi	r24, 0x73	; 115
 14a:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
 14e:	82 ec       	ldi	r24, 0xC2	; 194
 150:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
 154:	87 e6       	ldi	r24, 0x67	; 103
 156:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
 15a:	83 ec       	ldi	r24, 0xC3	; 195
 15c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
 160:	8a e3       	ldi	r24, 0x3A	; 58
 162:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
 166:	08 95       	ret

Disassembly of section .text.lcd_calc:

00000080 <lcd_calc>:
  80:	85 ec       	ldi	r24, 0xC5	; 197
  82:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  86:	83 e4       	ldi	r24, 0x43	; 67
  88:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  8c:	86 ec       	ldi	r24, 0xC6	; 198
  8e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  92:	81 e4       	ldi	r24, 0x41	; 65
  94:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  98:	87 ec       	ldi	r24, 0xC7	; 199
  9a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  9e:	8c e4       	ldi	r24, 0x4C	; 76
  a0:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  a4:	88 ec       	ldi	r24, 0xC8	; 200
  a6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  aa:	83 e4       	ldi	r24, 0x43	; 67
  ac:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  b0:	89 ec       	ldi	r24, 0xC9	; 201
  b2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  b6:	85 e5       	ldi	r24, 0x55	; 85
  b8:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  bc:	8a ec       	ldi	r24, 0xCA	; 202
  be:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  c2:	8c e4       	ldi	r24, 0x4C	; 76
  c4:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  c8:	8b ec       	ldi	r24, 0xCB	; 203
  ca:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  ce:	81 e4       	ldi	r24, 0x41	; 65
  d0:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  d4:	8c ec       	ldi	r24, 0xCC	; 204
  d6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  da:	8d e4       	ldi	r24, 0x4D	; 77
  dc:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  e0:	8d ec       	ldi	r24, 0xCD	; 205
  e2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  e6:	84 e4       	ldi	r24, 0x44	; 68
  e8:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  ec:	8e ec       	ldi	r24, 0xCE	; 206
  ee:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  f2:	8f e4       	ldi	r24, 0x4F	; 79
  f4:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
  f8:	8f ec       	ldi	r24, 0xCF	; 207
  fa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_adress>
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_data>
 104:	08 95       	ret

Disassembly of section .text.main:

00000220 <main>:
 220:	8f ef       	ldi	r24, 0xFF	; 255
 222:	84 b9       	out	0x04, r24	; 4
 224:	87 b9       	out	0x07, r24	; 7
 226:	80 ef       	ldi	r24, 0xF0	; 240
 228:	85 b9       	out	0x05, r24	; 5
 22a:	8f ea       	ldi	r24, 0xAF	; 175
 22c:	88 b9       	out	0x08, r24	; 8
 22e:	0e 94 32 01 	call	0x264	; 0x264 <lcd_init>
 232:	0e 94 3c 01 	call	0x278	; 0x278 <lcd_off_cursor>
 236:	0e 94 83 00 	call	0x106	; 0x106 <lcd_default>
 23a:	0e 94 40 00 	call	0x80	; 0x80 <_etext>
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	08 95       	ret
