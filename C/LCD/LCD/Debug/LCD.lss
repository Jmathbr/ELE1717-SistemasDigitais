
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000280  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000280  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000098  00000000  00000000  000002af  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001ae9  00000000  00000000  00000347  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000071b  00000000  00000000  00001e30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000995  00000000  00000000  0000254b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000019c  00000000  00000000  00002ee0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000020f  00000000  00000000  0000307c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000006dc  00000000  00000000  0000328b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000088  00000000  00000000  00003967  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000228  00000228  0000027c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000039f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.lcd_cmd 00000022  000001e4  000001e4  00000238  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.lcd_data 0000005c  00000080  00000080  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.lcd_adress 0000005c  000000dc  000000dc  00000130  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.lcd_init 00000014  00000206  00000206  0000025a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.lcd_off_cursor 0000000e  0000021a  0000021a  0000026e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.lcd_default 0000003e  00000182  00000182  000001d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.lcd_calc 0000004a  00000138  00000138  0000018c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.main    00000024  000001c0  000001c0  00000214  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
   8:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
   c:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  10:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  14:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  18:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  1c:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  20:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  24:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  28:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  2c:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  30:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  34:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  38:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  3c:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  40:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  44:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  48:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  4c:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  50:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  54:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  58:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  5c:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  60:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>
  64:	0c 94 14 01 	jmp	0x228	; 0x228 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <main>
  78:	0c 94 3e 00 	jmp	0x7c	; 0x7c <_exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

00000228 <__bad_interrupt>:
 228:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.lcd_cmd:

000001e4 <lcd_cmd>:
void delay_2(){
	for(int i = 0;i<1000;i++){}
}
void lcd_cmd(unsigned char cmd){
	
	PORTB &= 0xF0;								// Mask preservation 4 LSBs
 1e4:	95 b1       	in	r25, 0x05	; 5
 1e6:	90 7f       	andi	r25, 0xF0	; 240
 1e8:	95 b9       	out	0x05, r25	; 5
	cmd &= 0x0F;
 1ea:	8f 70       	andi	r24, 0x0F	; 15
	PORTB |= cmd;								// Add data command
 1ec:	95 b1       	in	r25, 0x05	; 5
 1ee:	89 2b       	or	r24, r25
 1f0:	85 b9       	out	0x05, r24	; 5
	
	PORTB &= ~(1<<PORTB5);						// Set RS = 0
 1f2:	85 b1       	in	r24, 0x05	; 5
 1f4:	8f 7d       	andi	r24, 0xDF	; 223
 1f6:	85 b9       	out	0x05, r24	; 5
	PORTB |= (1<<PORTB4);						// Set E = 1
 1f8:	85 b1       	in	r24, 0x05	; 5
 1fa:	80 61       	ori	r24, 0x10	; 16
 1fc:	85 b9       	out	0x05, r24	; 5
	delay_1();				
	PORTB &= ~(1<<PORTB4);						// Set E = 0 
 1fe:	85 b1       	in	r24, 0x05	; 5
 200:	8f 7e       	andi	r24, 0xEF	; 239
 202:	85 b9       	out	0x05, r24	; 5
 204:	08 95       	ret

Disassembly of section .text.lcd_data:

00000080 <lcd_data>:
void delay_1(){
	for(int i = 0;i<200;i++){}
}
void delay_2(){
	for(int i = 0;i<1000;i++){}
}
  80:	95 b1       	in	r25, 0x05	; 5
  82:	90 62       	ori	r25, 0x20	; 32
  84:	95 b9       	out	0x05, r25	; 5
  86:	20 e0       	ldi	r18, 0x00	; 0
  88:	30 e0       	ldi	r19, 0x00	; 0
  8a:	21 c0       	rjmp	.+66     	; 0xce <lcd_data+0x4e>
  8c:	21 15       	cp	r18, r1
  8e:	31 05       	cpc	r19, r1
  90:	81 f4       	brne	.+32     	; 0xb2 <lcd_data+0x32>
  92:	95 b1       	in	r25, 0x05	; 5
  94:	90 7f       	andi	r25, 0xF0	; 240
  96:	95 b9       	out	0x05, r25	; 5
  98:	95 b1       	in	r25, 0x05	; 5
  9a:	48 2f       	mov	r20, r24
  9c:	42 95       	swap	r20
  9e:	4f 70       	andi	r20, 0x0F	; 15
  a0:	94 2b       	or	r25, r20
  a2:	95 b9       	out	0x05, r25	; 5
  a4:	95 b1       	in	r25, 0x05	; 5
  a6:	90 61       	ori	r25, 0x10	; 16
  a8:	95 b9       	out	0x05, r25	; 5
  aa:	95 b1       	in	r25, 0x05	; 5
  ac:	9f 7e       	andi	r25, 0xEF	; 239
  ae:	95 b9       	out	0x05, r25	; 5
  b0:	0c c0       	rjmp	.+24     	; 0xca <lcd_data+0x4a>
  b2:	95 b1       	in	r25, 0x05	; 5
  b4:	90 7f       	andi	r25, 0xF0	; 240
  b6:	95 b9       	out	0x05, r25	; 5
  b8:	95 b1       	in	r25, 0x05	; 5
  ba:	98 2b       	or	r25, r24
  bc:	95 b9       	out	0x05, r25	; 5
  be:	95 b1       	in	r25, 0x05	; 5
  c0:	90 61       	ori	r25, 0x10	; 16
  c2:	95 b9       	out	0x05, r25	; 5
  c4:	95 b1       	in	r25, 0x05	; 5
  c6:	9f 7e       	andi	r25, 0xEF	; 239
  c8:	95 b9       	out	0x05, r25	; 5
  ca:	2f 5f       	subi	r18, 0xFF	; 255
  cc:	3f 4f       	sbci	r19, 0xFF	; 255
  ce:	22 30       	cpi	r18, 0x02	; 2
  d0:	31 05       	cpc	r19, r1
  d2:	e4 f2       	brlt	.-72     	; 0x8c <lcd_data+0xc>
  d4:	85 b1       	in	r24, 0x05	; 5
  d6:	8f 7d       	andi	r24, 0xDF	; 223
  d8:	85 b9       	out	0x05, r24	; 5
  da:	08 95       	ret

Disassembly of section .text.lcd_adress:

000000dc <lcd_adress>:
  dc:	95 b1       	in	r25, 0x05	; 5
  de:	9f 7d       	andi	r25, 0xDF	; 223
  e0:	95 b9       	out	0x05, r25	; 5
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	21 c0       	rjmp	.+66     	; 0x12a <lcd_adress+0x4e>
  e8:	21 15       	cp	r18, r1
  ea:	31 05       	cpc	r19, r1
  ec:	81 f4       	brne	.+32     	; 0x10e <lcd_adress+0x32>
  ee:	95 b1       	in	r25, 0x05	; 5
  f0:	90 7f       	andi	r25, 0xF0	; 240
  f2:	95 b9       	out	0x05, r25	; 5
  f4:	95 b1       	in	r25, 0x05	; 5
  f6:	48 2f       	mov	r20, r24
  f8:	42 95       	swap	r20
  fa:	4f 70       	andi	r20, 0x0F	; 15
  fc:	94 2b       	or	r25, r20
  fe:	95 b9       	out	0x05, r25	; 5
 100:	95 b1       	in	r25, 0x05	; 5
 102:	90 61       	ori	r25, 0x10	; 16
 104:	95 b9       	out	0x05, r25	; 5
 106:	95 b1       	in	r25, 0x05	; 5
 108:	9f 7e       	andi	r25, 0xEF	; 239
 10a:	95 b9       	out	0x05, r25	; 5
 10c:	0c c0       	rjmp	.+24     	; 0x126 <lcd_adress+0x4a>
 10e:	95 b1       	in	r25, 0x05	; 5
 110:	90 7f       	andi	r25, 0xF0	; 240
 112:	95 b9       	out	0x05, r25	; 5
 114:	95 b1       	in	r25, 0x05	; 5
 116:	98 2b       	or	r25, r24
 118:	95 b9       	out	0x05, r25	; 5
 11a:	95 b1       	in	r25, 0x05	; 5
 11c:	90 61       	ori	r25, 0x10	; 16
 11e:	95 b9       	out	0x05, r25	; 5
 120:	95 b1       	in	r25, 0x05	; 5
 122:	9f 7e       	andi	r25, 0xEF	; 239
 124:	95 b9       	out	0x05, r25	; 5
 126:	2f 5f       	subi	r18, 0xFF	; 255
 128:	3f 4f       	sbci	r19, 0xFF	; 255
 12a:	22 30       	cpi	r18, 0x02	; 2
 12c:	31 05       	cpc	r19, r1
 12e:	e4 f2       	brlt	.-72     	; 0xe8 <lcd_adress+0xc>
 130:	85 b1       	in	r24, 0x05	; 5
 132:	8f 7d       	andi	r24, 0xDF	; 223
 134:	85 b9       	out	0x05, r24	; 5
 136:	08 95       	ret

Disassembly of section .text.lcd_init:

00000206 <lcd_init>:
	}
	PORTB &= ~(1<<PORTB5);					// Set RS = 0 
}
void lcd_init(){
	
	lcd_cmd(0x02);							//RS = 0 D7:D4 = 0010
 206:	82 e0       	ldi	r24, 0x02	; 2
 208:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <lcd_cmd>
	lcd_cmd(0x02);							//RS = 0 D7:D4 = 0010
 20c:	82 e0       	ldi	r24, 0x02	; 2
 20e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <lcd_cmd>
	lcd_cmd(0x08);							//RS = 0 D7:D4 = 1000
 212:	88 e0       	ldi	r24, 0x08	; 8
 214:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <lcd_cmd>
 218:	08 95       	ret

Disassembly of section .text.lcd_off_cursor:

0000021a <lcd_off_cursor>:
	
}

void lcd_off_cursor(){

	lcd_cmd(0x00);							//RS = 0 D7:D4 = 0000
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <lcd_cmd>
	lcd_cmd(0x0C);							//RS = 0 D7:D4 = 1100
 220:	8c e0       	ldi	r24, 0x0C	; 12
 222:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <lcd_cmd>
 226:	08 95       	ret

Disassembly of section .text.lcd_default:

00000182 <lcd_default>:
void delay_1(){
	for(int i = 0;i<200;i++){}
}
void delay_2(){
	for(int i = 0;i<1000;i++){}
}
 182:	80 e8       	ldi	r24, 0x80	; 128
 184:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_adress>
 188:	8d e4       	ldi	r24, 0x4D	; 77
 18a:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 18e:	8f e6       	ldi	r24, 0x6F	; 111
 190:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 194:	84 e6       	ldi	r24, 0x64	; 100
 196:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 19a:	8a e3       	ldi	r24, 0x3A	; 58
 19c:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 1a0:	80 ec       	ldi	r24, 0xC0	; 192
 1a2:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_adress>
 1a6:	8d e4       	ldi	r24, 0x4D	; 77
 1a8:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 1ac:	83 e7       	ldi	r24, 0x73	; 115
 1ae:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 1b2:	87 e6       	ldi	r24, 0x67	; 103
 1b4:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 1b8:	8a e3       	ldi	r24, 0x3A	; 58
 1ba:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 1be:	08 95       	ret

Disassembly of section .text.lcd_calc:

00000138 <lcd_calc>:
 138:	85 ec       	ldi	r24, 0xC5	; 197
 13a:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_adress>
 13e:	83 e4       	ldi	r24, 0x43	; 67
 140:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 144:	81 e4       	ldi	r24, 0x41	; 65
 146:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 14a:	8c e4       	ldi	r24, 0x4C	; 76
 14c:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 150:	83 e4       	ldi	r24, 0x43	; 67
 152:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 156:	85 e5       	ldi	r24, 0x55	; 85
 158:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 15c:	8c e4       	ldi	r24, 0x4C	; 76
 15e:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 162:	81 e4       	ldi	r24, 0x41	; 65
 164:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 168:	8e e4       	ldi	r24, 0x4E	; 78
 16a:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 16e:	84 e4       	ldi	r24, 0x44	; 68
 170:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 174:	8f e4       	ldi	r24, 0x4F	; 79
 176:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 180:	08 95       	ret

Disassembly of section .text.main:

000001c0 <main>:
 1c0:	8f ef       	ldi	r24, 0xFF	; 255
 1c2:	84 b9       	out	0x04, r24	; 4
 1c4:	87 b9       	out	0x07, r24	; 7
 1c6:	80 ef       	ldi	r24, 0xF0	; 240
 1c8:	85 b9       	out	0x05, r24	; 5
 1ca:	8f ea       	ldi	r24, 0xAF	; 175
 1cc:	88 b9       	out	0x08, r24	; 8
 1ce:	0e 94 03 01 	call	0x206	; 0x206 <lcd_init>
 1d2:	0e 94 0d 01 	call	0x21a	; 0x21a <lcd_off_cursor>
 1d6:	0e 94 c1 00 	call	0x182	; 0x182 <lcd_default>
 1da:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_calc>
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	08 95       	ret
